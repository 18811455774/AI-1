parameters:
  Agent: Hosted Ubuntu 1604
  Demands: "python3"
  stageName: 'defaultStageName'
  jobDisplayName: 'defaultDisplayName'
  jobTimeoutInMinutes: 30
  DefaultWorkingDirectory: #
  pypi_artifactFeeds: #
  pypi_pythonDownloadServiceConnections: #
  module: src
  repo: #
  release: #
  dependsOn: []
  environment: #
  before: #

stages:
- stage: ${{parameters.stageName}}
  condition: and(succeeded(), and(eq(variables['Build.SourceBranch'], 'refs/heads/master'), ne(variables['Build.Reason'], 'PullRequest')))
  dependsOn: ${{parameters.dependsOn}}
  jobs:
  - deployment: package_and_publish_release
    environment:  ${{parameters.environment}} 
    pool:
      name: $(Agent_Name)
    strategy:
      runOnce:
        deploy:
          steps:
          - checkout: self
          - task: UsePythonVersion@0
            displayName: 'Use Python 3.7'
            inputs:
              versionSpec: 3.7
          - script: |
              pip install --upgrade pip
            displayName: 'Update Pip'
          - script: |
              pip install wheel twine keyring artifacts-keyring
            displayName: 'Install dependencies'
          - task: TwineAuthenticate@1
            inputs:
              artifactFeed: $(candidate)
            displayName: 'Twine Authenticate'
          - script: |                        
              python setup.py sdist bdist_wheel
            displayName: 'Build wheel'
            env:
              VERSION: $(Build.BuildNumber)
          - script: |
              python -m twine upload -r $(release) --config-file $(PYPIRC_PATH) dist/*.whl --verbose
            displayName: 'Upload wheel'
  - deployment: Release_Health_Testing
    environment:  ${{parameters.environment}}
    dependsOn: package_and_publish_release
    timeoutInMinutes: 5 # how long to run the job before automatically cancelling
    pool:
      name: $(Agent_Name)
    strategy:
      runOnce:
        deploy:
          steps:
            - checkout: self
            - task: UsePythonVersion@0
              displayName: 'Use Python 3.7'
              inputs:
                versionSpec: 3.7            
            - task: PipAuthenticate@1
              inputs:
                artifactFeeds: $(pypi_artifactFeeds)
                pythonDownloadServiceConnections: $(pypi_pythonDownloadServiceConnections)
                onlyAddExtraIndex: true
            - script: |
                pip install --upgrade pip
              displayName: 'Update Pip'
            - script: |
                pip install pytest pytest-azurepipelines pytest-nunit pytest-cov keyring artifacts-keyring commondatamodel-objectmodel
              displayName: 'Install dependencies'
              continueOnError: true
            # allow user to run global before
            - ${{ if parameters.before }}:
              - ${{ parameters.before }}
            - script: |
                pip install $(module)
                pytest tests/integration --durations 0 --junitxml=junit/test-results.xml --cov=cdm2ai --cov-report=xml
              displayName: 'pytest'
            - task: PublishTestResults@2
              condition: succeededOrFailed()
              inputs:
                testResultsFiles: '**/test-*.xml'
                testRunTitle: 'Publish test results for Python $(python.version)'
            - task: PublishCodeCoverageResults@1
              inputs:
                codeCoverageTool: Cobertura
                summaryFileLocation: '$(System.DefaultWorkingDirectory)/**/coverage.xml'
