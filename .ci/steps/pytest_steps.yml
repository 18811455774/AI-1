parameters:
  conda: #
  azureSubscription: #
  azure_subscription: #
  azureresourcegroup: #
  workspacename: #
  azureregion: #
  location: #
  pylint_fail: True
  set_vars: true

steps:
- task: AzureCLI@1
  displayName: "Set Vars"
  condition: eq('${{ parameters.set_vars }}', true)
  inputs:
    azureSubscription: ${{parameters.azureSubscription}}
    scriptLocation: 'inlineScript'
    failOnStderr: True
    inlineScript: |
      source activate ${{parameters.conda}}

      rm -f workspace_conf.yml
      
      echo "subscription_id:  ${{parameters.azure_subscription}}" >> workspace_conf.yml
      echo "resource_group:  ${{parameters.azureresourcegroup}}" >> workspace_conf.yml
      echo "workspace_name:  ${{parameters.workspacename}}" >> workspace_conf.yml
      echo "workspace_region:  ${{parameters.azureregion}}" >> workspace_conf.yml
      
      mv workspace_conf.yml ../

- task: AzureCLI@1
  displayName: "Pytests"
  inputs:
    azureSubscription: ${{parameters.azureSubscription}}
    scriptLocation: 'inlineScript'
    failOnStderr: True
    inlineScript: |
      source activate ${{parameters.conda}}

      pytest tests --doctest-modules --junitxml=junit/test-results.xml --cov=. --cov-report=xml
      
      jupyter nbconvert --to markdown notebooks/0*.output_ipynb
      echo "##vso[task.uploadsummary]$(System.DefaultWorkingDirectory)/notebooks/00_AMLConfiguration.md"

- task: AzureCLI@1
  displayName: "PyLint"
  inputs:
    azureSubscription: ${{parameters.azureSubscription}}
    scriptLocation: 'inlineScript'
    failOnStderr: ${{parameters.pylint_fail}}
    inlineScript: |
      source activate ${{parameters.conda}}

      jupyter nbconvert --to python notebooks/0*.ipynb
      
      pylint --output-format=junit notebooks/0*.py >> test-pylint-results.xml
      pylint notebooks/0*.py


- task: PublishTestResults@2
  displayName: 'Publish Test Results **/test-*.xml'
  inputs:
    testResultsFiles: '**/test-*.xml'
    failTaskOnFailedTests: true
  condition: succeededOrFailed()

- task: PublishCodeCoverageResults@1
  inputs:
    codeCoverageTool: Cobertura
    summaryFileLocation: '$(System.DefaultWorkingDirectory)/**/coverage.xml'
  condition: succeededOrFailed()
