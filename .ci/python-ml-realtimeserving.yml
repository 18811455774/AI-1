# MLAKSDeploy Pipeline

trigger:
  batch: true
  branches:
    include:
    - master
  paths:
    include:
      - submodules/DeployMLModelKubernetes/*

pr:
  branches:    
    include:
    - master
  paths:
   include:
     - submodules/DeployMLModelKubernetes/* 

schedules:
- cron: "0 * * * *"
  displayName: Daily midnight build
  branches:
    include:
    - master
  always: true

variables:
  deployment_name: 'python-ml-rts'
  azureresourcegroup: 'python-ml-rts-test'
  workspacename: 'pythonmlrtsws'
  azureregion: 'westus'
  expires : "2019-08-01"
  python_path: "$(System.DefaultWorkingDirectory)/submodules/DeployMLModelKubernetes/{{cookiecutter.project_name}}/"

jobs:
- job: MLAKSDeployAMLJob
  timeoutInMinutes: 300
  cancelTimeoutInMinutes: 2
  pool:
    vmImage: 'Ubuntu-16.04'
  steps:
  - template: steps/deploy_rts.yml
    parameters:
      azureSubscription: $(azureSubscription)
      azureresourcegroup: $(azureresourcegroup)
      location: "submodules/DeployMLModelKubernetes/{{cookiecutter.project_name}}"
      alias : $(alias)
      project : $(project)
      expires : "2019-08-01"
      conda: "MLAKSDeployAML"
      azure_subscription: $(azure_subscription)
      workspacename: 'pythonmlrtsws'
      azureregion: 'westus'
      aksimagename: "myimage"
      aks_name: "pythonmlaks"
      aks_location: "westus"
      aks_service_name: "pythonmlaksservice"
      python_path: $(python_path)
      conda_location: "submodules/DeployMLModelKubernetes/{{cookiecutter.project_name}}"
  - task: AzureCLI@1
    displayName: 'Backup Cleanup'
    condition: or(canceled(),failed())
    inputs:
      azureSubscription: ${{parameters.azureSubscription}}
      scriptLocation: inlineScript
      inlineScript: |
        source /usr/share/miniconda/etc/profile.d/conda.sh
        conda activate MLAKSDeployAML
        echo Execute Resource Group Delete
        existResponse=$(az group exists -n $(azureresourcegroup))
        if [ "$existResponse" == "true" ]; then
          echo Deleting project resource group
          az group delete --name $(azureresourcegroup) --yes
        else
          echo Project resource group did not exist
        fi
        echo Done Cleanup
